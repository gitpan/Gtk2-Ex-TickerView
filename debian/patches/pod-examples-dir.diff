diff -Nur -x '*.orig' -x '*~' tickerview//lib/Gtk2/Ex/TickerView.pm tickerview.new//lib/Gtk2/Ex/TickerView.pm
--- tickerview//lib/Gtk2/Ex/TickerView.pm	2010-12-25 10:33:25.000000000 +1100
+++ tickerview.new//lib/Gtk2/Ex/TickerView.pm	2010-12-25 10:35:52.000000000 +1100
@@ -1744,7 +1744,7 @@
 right-to-left scripts such as Arabic based on the characters and shouldn't
 need any special setups.  (But if you want to rotate 90 degrees for
 something vertical it might be much trickier.  Just setting text "gravity"
-doesn't work.  See F<examples/vertical-rottext.pl> in the TickerView sources
+doesn't work.  See F</usr/share/doc/libgtk2-ex-tickerview-perl/examples/vertical-rottext.pl.gz>
 for one way to do it.)
 
 Currently only a list style model is expected, meaning only a single level,
@@ -1756,8 +1756,9 @@
 ridiculously complicated.  Its power comes when showing a big updating list
 or wanting customized drawing, but the amount of code to get something on
 the screen is not nice.  Have a look at "Tree and List Widget Overview" in
-the Gtk reference manual if you haven't already.  Then F<examples/simple.pl>
-in the TickerView sources is more or less the minimum to actually display
+the Gtk reference manual if you haven't already.  Then
+F</usr/share/doc/libgtk2-ex-tickerview-perl/examples/simple.pl>
+is more or less the minimum to actually display
 something.
 
 =head1 FUNCTIONS
@@ -1871,8 +1872,9 @@
 TickerView implements the C<Gtk2::Buildable> interface of Gtk 2.12 and up,
 allowing C<Gtk2::Builder> to construct a ticker.  The class name is
 C<Gtk2__Ex__TickerView> and renderers and attributes are added as children
-per C<Gtk2::CellLayout>.  Here's a sample, or see F<examples/builder.pl> in
-the TickerView sources for a complete program,
+per C<Gtk2::CellLayout>.  Here's a sample, or see
+F</usr/share/doc/libgtk2-ex-tickerview-perl/examples/builder.pl>
+for a complete program,
 
     <object class="Gtk2__Ex__TickerView" id="myticker">
       <property name="model">myliststore</property>
@@ -1899,7 +1901,7 @@
 the right (vice versa in RtoL mode).  In a TickerView the ends immediately
 follow the starts, there's no gap in between, unlike say in a C<Gtk2::HBox>.
 (Which means the "expand" parameter is ignored currently.)  See
-F<examples/order.pl> in the sources for a demonstration.
+F</usr/share/doc/libgtk2-ex-tickerview-perl/examples/order.pl> for a demonstration.
 
 When the model has no rows the TickerView's desired height from
 C<size_request> is zero.  This is bad if you want a visible but blank area
diff -Nur -x '*.orig' -x '*~' tickerview//lib/Gtk2/Ex/TickerView.pm.rej tickerview.new//lib/Gtk2/Ex/TickerView.pm.rej
--- tickerview//lib/Gtk2/Ex/TickerView.pm.rej	1970-01-01 10:00:00.000000000 +1000
+++ tickerview.new//lib/Gtk2/Ex/TickerView.pm.rej	2010-12-25 10:33:55.000000000 +1100
@@ -0,0 +1,11 @@
+--- lib/Gtk2/Ex/TickerView.pm	2009-12-12 12:53:04.000000000 +1100
++++ lib/Gtk2/Ex/TickerView.pm	2009-12-12 13:01:36.000000000 +1100
+@@ -1833,7 +1834,7 @@
+ 2.12 and up, allowing C<Gtk2::Builder> to construct a TickerView.  The class
+ name is C<Gtk2__Ex__TickerView> and renderers and attributes are added as
+ children per C<Gtk2::CellLayout>.  Here's a sample, or see
+-F<examples/builder.pl> in the TickerView sources for a complete program,
++F</usr/share/doc/libgtk2-ex-tickerview-perl/examples/builder.pl> for a complete program,
+ 
+     <object class="Gtk2__Ex__TickerView" id="myticker">
+       <property name="model">myliststore</property>
